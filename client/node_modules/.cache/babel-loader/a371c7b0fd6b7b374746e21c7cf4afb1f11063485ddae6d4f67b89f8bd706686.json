{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/rick_and_morty/client/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useLocation, Routes, Route } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Form from \"../src/components/form/Form\";\n// import About from \"../src/components/about/About\";\n// import Detail from \"../src/components/detail/Detail\";\n// import Favorites from \"../src/components/favorites/Favorites\";\n// import Nav from \"../src/components/nav/Nav\";\n\n// import Cards from \"../src/components/cards/Cards\"\n\n// function App() {\n//   const [characters, setCharacters] = useState([]);\n//   const [access, setAccess] = useState(false);\n//   const navigate = useNavigate();\n\n//   function login(userData) {\n//     const { email, password } = userData;\n//     const URL = \"http://localhost:3001/rickandmorty/login/\";\n//     axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\n//       const { access } = data;\n//       setAccess(access); // Corregido: asignar el valor booleano access en lugar de data\n//       access && navigate(\"/home\");\n//     });\n//   }\n\n//   useEffect(() => {\n//     !access && navigate(\"/\");\n//   }, [access, navigate]);\n\n//   const onSearch = async (id) => {\n//     try {\n//       const characterId = characters.filter((character) => character.id === id);\n//       if (characterId.length) return alert(\"The character already exists!!!\");\n//       if (id < 1 || id > 826)\n//         return alert(\"There is no character with this entered ID!\");\n//       const { data } = await axios.get(\n//         `http://localhost:3001/rickandmorty/character/${id}`\n//       );\n//       if (data.name) {\n//         setCharacters((oldChars) => [...oldChars, data]);\n//       } else {\n//         window.alert(\"No hay personajes con este ID!\");\n//       }\n//     } catch (error) {\n//       console.log(error.message);\n//     }\n//   };\n\n//   const onClose = (id) => {\n//     setCharacters(characters.filter((character) => character.id !== id));\n//   };\n\n//   const location = useLocation();\n\n//   return (\n//     <div className=\"App\">\n//       {location.pathname !== \"/\" ? <Nav onSearch={onSearch} /> : null}\n//       <hr />\n//       <Routes>\n//         <Route exact path=\"/\" element={<Form login={login} />} />\n//         <Route\n//           exact\n//           path=\"/home\"\n//           element={\n//             <Cards\n//               characters={characters}\n//               onClose={onClose}\n//               numberOfCards={characters.length}\n//             />\n//           }\n//         />\n//         <Route exact path=\"/about\" element={<About />} />\n//         <Route exact path=\"/detail/:id\" element={<Detail />} />\n//         <Route\n//           exact\n//           path=\"/favorites\"\n//           element={<Favorites onClose={onClose} />}\n//         />\n//       </Routes>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Form from \"../src/components/form/Form\";\nimport About from \"../src/components/about/About\";\nimport Detail from \"../src/components/detail/Detail\";\nimport Favorites from \"../src/components/favorites/Favorites\";\nimport Nav from \"../src/components/nav/Nav\";\nimport Cards from \"../src/components/cards/Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const navigate = useNavigate();\n  async function login(userData) {\n    try {\n      const {\n        email,\n        password\n      } = userData;\n      const URL = \"http://localhost:3001/rickandmorty/login/\";\n      const {\n        data\n      } = await axios.get(URL + `?email=${email}&password=${password}`);\n      const {\n        access\n      } = data;\n      setAccess(access);\n      access && navigate(\"/home\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  useEffect(() => {\n    !access && navigate(\"/\");\n  }, [access, navigate]);\n  const onSearch = async id => {\n    try {\n      const characterId = characters.filter(character => character.id === id);\n      if (characterId.length) return alert(\"The character already exists!!!\");\n      if (id < 1 || id > 826) return alert(\"There is no character with this entered ID!\");\n      const {\n        data\n      } = await axios.get(`http://localhost:3001/rickandmorty/character/${id}`);\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert(\"No hay personajes con este ID!\");\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(character => character.id !== id));\n  };\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== \"/\" ? /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 36\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose,\n          numberOfCards: characters.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XRo/bWH+6oq41T7irSyzMR5V15Q=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Routes","Route","axios","Form","About","Detail","Favorites","Nav","Cards","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","access","setAccess","navigate","login","userData","email","password","URL","data","get","error","console","log","message","onSearch","id","characterId","filter","character","length","alert","name","oldChars","window","onClose","location","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","numberOfCards","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/rick_and_morty/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useLocation, Routes, Route } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Form from \"../src/components/form/Form\";\n// import About from \"../src/components/about/About\";\n// import Detail from \"../src/components/detail/Detail\";\n// import Favorites from \"../src/components/favorites/Favorites\";\n// import Nav from \"../src/components/nav/Nav\";\n\n// import Cards from \"../src/components/cards/Cards\"\n\n// function App() {\n//   const [characters, setCharacters] = useState([]);\n//   const [access, setAccess] = useState(false);\n//   const navigate = useNavigate();\n\n//   function login(userData) {\n//     const { email, password } = userData;\n//     const URL = \"http://localhost:3001/rickandmorty/login/\";\n//     axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\n//       const { access } = data;\n//       setAccess(access); // Corregido: asignar el valor booleano access en lugar de data\n//       access && navigate(\"/home\");\n//     });\n//   }\n  \n\n//   useEffect(() => {\n//     !access && navigate(\"/\");\n//   }, [access, navigate]);\n\n//   const onSearch = async (id) => {\n//     try {\n//       const characterId = characters.filter((character) => character.id === id);\n//       if (characterId.length) return alert(\"The character already exists!!!\");\n//       if (id < 1 || id > 826)\n//         return alert(\"There is no character with this entered ID!\");\n//       const { data } = await axios.get(\n//         `http://localhost:3001/rickandmorty/character/${id}`\n//       );\n//       if (data.name) {\n//         setCharacters((oldChars) => [...oldChars, data]);\n//       } else {\n//         window.alert(\"No hay personajes con este ID!\");\n//       }\n//     } catch (error) {\n//       console.log(error.message);\n//     }\n//   };\n\n//   const onClose = (id) => {\n//     setCharacters(characters.filter((character) => character.id !== id));\n//   };\n\n//   const location = useLocation();\n\n//   return (\n//     <div className=\"App\">\n//       {location.pathname !== \"/\" ? <Nav onSearch={onSearch} /> : null}\n//       <hr />\n//       <Routes>\n//         <Route exact path=\"/\" element={<Form login={login} />} />\n//         <Route\n//           exact\n//           path=\"/home\"\n//           element={\n//             <Cards\n//               characters={characters}\n//               onClose={onClose}\n//               numberOfCards={characters.length}\n//             />\n//           }\n//         />\n//         <Route exact path=\"/about\" element={<About />} />\n//         <Route exact path=\"/detail/:id\" element={<Detail />} />\n//         <Route\n//           exact\n//           path=\"/favorites\"\n//           element={<Favorites onClose={onClose} />}\n//         />\n//       </Routes>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Form from \"../src/components/form/Form\";\nimport About from \"../src/components/about/About\";\nimport Detail from \"../src/components/detail/Detail\";\nimport Favorites from \"../src/components/favorites/Favorites\";\nimport Nav from \"../src/components/nav/Nav\";\nimport Cards from \"../src/components/cards/Cards\";\n\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const navigate = useNavigate();\n\n  async function login(userData) {\n    try {\n      const { email, password } = userData;\n      const URL = \"http://localhost:3001/rickandmorty/login/\";\n      const { data } = await axios.get(URL + `?email=${email}&password=${password}`);\n      const { access } = data;\n      setAccess(access);\n      access && navigate(\"/home\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  useEffect(() => {\n    !access && navigate(\"/\");\n  }, [access, navigate]);\n\n  const onSearch = async (id) => {\n    try {\n      const characterId = characters.filter((character) => character.id === id);\n      if (characterId.length) return alert(\"The character already exists!!!\");\n      if (id < 1 || id > 826)\n        return alert(\"There is no character with this entered ID!\");\n      const { data } = await axios.get(\n        `http://localhost:3001/rickandmorty/character/${id}`\n      );\n      if (data.name) {\n        setCharacters((oldChars) => [...oldChars, data]);\n      } else {\n        window.alert(\"No hay personajes con este ID!\");\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const onClose = (id) => {\n    setCharacters(characters.filter((character) => character.id !== id));\n  };\n\n  const location = useLocation();\n\n  return (\n    <div className=\"App\">\n      {location.pathname !== \"/\" ? <Nav onSearch={onSearch} /> : null}\n      <hr />\n      <Routes>\n        <Route exact path=\"/\" element={<Form login={login} />} />\n        <Route\n          exact\n          path=\"/home\"\n          element={\n            <Cards\n              characters={characters}\n              onClose={onClose}\n              numberOfCards={characters.length}\n            />\n          }\n        />\n        <Route exact path=\"/about\" element={<About />} />\n        <Route exact path=\"/detail/:id\" element={<Detail />} />\n        <Route\n          exact\n          path=\"/favorites\"\n          element={<Favorites/>}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC1E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,MAAM,MAAM,iCAAiC;AACpD,OAAOC,SAAS,MAAM,uCAAuC;AAC7D,OAAOC,GAAG,MAAM,2BAA2B;AAC3C,OAAOC,KAAK,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMqB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9B,eAAeoB,KAAKA,CAACC,QAAQ,EAAE;IAC7B,IAAI;MACF,MAAM;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGF,QAAQ;MACpC,MAAMG,GAAG,GAAG,2CAA2C;MACvD,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAACF,GAAG,GAAI,UAASF,KAAM,aAAYC,QAAS,EAAC,CAAC;MAC9E,MAAM;QAAEN;MAAO,CAAC,GAAGQ,IAAI;MACvBP,SAAS,CAACD,MAAM,CAAC;MACjBA,MAAM,IAAIE,QAAQ,CAAC,OAAO,CAAC;IAC7B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC5B;EACF;EAEA/B,SAAS,CAAC,MAAM;IACd,CAACkB,MAAM,IAAIE,QAAQ,CAAC,GAAG,CAAC;EAC1B,CAAC,EAAE,CAACF,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEtB,MAAMY,QAAQ,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMC,WAAW,GAAGlB,UAAU,CAACmB,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACH,EAAE,KAAKA,EAAE,CAAC;MACzE,IAAIC,WAAW,CAACG,MAAM,EAAE,OAAOC,KAAK,CAAC,iCAAiC,CAAC;MACvE,IAAIL,EAAE,GAAG,CAAC,IAAIA,EAAE,GAAG,GAAG,EACpB,OAAOK,KAAK,CAAC,6CAA6C,CAAC;MAC7D,MAAM;QAAEZ;MAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAC7B,gDAA+CM,EAAG,EACrD,CAAC;MACD,IAAIP,IAAI,CAACa,IAAI,EAAE;QACbtB,aAAa,CAAEuB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEd,IAAI,CAAC,CAAC;MAClD,CAAC,MAAM;QACLe,MAAM,CAACH,KAAK,CAAC,gCAAgC,CAAC;MAChD;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMW,OAAO,GAAIT,EAAE,IAAK;IACtBhB,aAAa,CAACD,UAAU,CAACmB,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtE,CAAC;EAED,MAAMU,QAAQ,GAAGzC,WAAW,CAAC,CAAC;EAE9B,oBACEW,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBF,QAAQ,CAACG,QAAQ,KAAK,GAAG,gBAAGjC,OAAA,CAACH,GAAG;MAACsB,QAAQ,EAAEA;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI,eAC/DrC,OAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrC,OAAA,CAACV,MAAM;MAAA0C,QAAA,gBACLhC,OAAA,CAACT,KAAK;QAAC+C,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAExC,OAAA,CAACP,IAAI;UAACe,KAAK,EAAEA;QAAM;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDrC,OAAA,CAACT,KAAK;QACJ+C,KAAK;QACLC,IAAI,EAAC,OAAO;QACZC,OAAO,eACLxC,OAAA,CAACF,KAAK;UACJK,UAAU,EAAEA,UAAW;UACvB0B,OAAO,EAAEA,OAAQ;UACjBY,aAAa,EAAEtC,UAAU,CAACqB;QAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFrC,OAAA,CAACT,KAAK;QAAC+C,KAAK;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAExC,OAAA,CAACN,KAAK;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDrC,OAAA,CAACT,KAAK;QAAC+C,KAAK;QAACC,IAAI,EAAC,aAAa;QAACC,OAAO,eAAExC,OAAA,CAACL,MAAM;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDrC,OAAA,CAACT,KAAK;QACJ+C,KAAK;QACLC,IAAI,EAAC,YAAY;QACjBC,OAAO,eAAExC,OAAA,CAACJ,SAAS;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnC,EAAA,CA1EQD,GAAG;EAAA,QAGOb,WAAW,EA0CXC,WAAW;AAAA;AAAAqD,EAAA,GA7CrBzC,GAAG;AA4EZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}