{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Nav from './components/nav/Nav.jsx';\nimport Cards from './components/cards/Cards.jsx';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport About from './components/about/About';\nimport Detail from './components/detail/Detail';\nimport Form from './components/form/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  function onSearch(id) {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    }).catch(() => {\n      window.alert('¡No hay personajes con este ID!');\n    });\n  }\n  const onClose = id => {\n    setCharacters(characters.filter(char => char.id !== parseInt(id)));\n  };\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== \"/\" ? /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"4ToxwyrZl0efTwboJVLrgWhX994=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\n\n// EJERCICIO 2 | Routing\n// Ahora le diremos a nuestro ./src/components/form/Form.jsx en App.js dónde debe renderizarse. Para esto:\n\n// Crea una ruta en el archivo App.js y crea una ruta para que el formulario se renderice en /.\n// Si obervas la imagen del ejercicio anterior, la barra de navegación aún se muestra en el login. Deberás crear un renderizado condicional, de modo tal que la Nav se muestre siempre y cuando no estemos en la ruta /.\n// PISTA: investiga sobre el hook useLocation de react-router-dom, y piensa cómo hacer el renderizado condicional.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Nav","Cards","useState","axios","Route","Routes","useLocation","About","Detail","Form","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","onSearch","id","then","_ref","data","name","oldChars","window","alert","catch","onClose","filter","char","parseInt","location","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/rick_and_morty/src/App.js"],"sourcesContent":["import './App.css';\nimport Nav from './components/nav/Nav.jsx';\nimport Cards from './components/cards/Cards.jsx';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport About from './components/about/About';\nimport Detail from './components/detail/Detail';\nimport Form from './components/form/Form';\n\n\nfunction App() {\n   const[characters, setCharacters] = useState([]);\n\n   function onSearch(id) {\n         axios(`https://rickandmortyapi.com/api/character/${id}`)\n            .then(({ data }) => {\n               if (data.name) {\n                  setCharacters((oldChars) => [...oldChars, data]);\n               } else {\n                  window.alert('¡No hay personajes con este ID!');\n               }\n             })\n         .catch(() => {\n            window.alert('¡No hay personajes con este ID!');\n          });\n   }\n\n   const onClose = (id) => {\n      setCharacters(characters.filter( char => char.id !== parseInt(id) ))\n   }\n\n   const location = useLocation();\n\n\n   return (\n      <div className='App'>\n         {\n            location.pathname !== \"/\" ?\n            <Nav onSearch={onSearch}/>\n            : null\n         }\n         <Nav onSearch = {onSearch}/>\n         <Routes>\n            <Route exact path=\"/\" element={<Form/>} />\n            <Route path='/home' element={<Cards characters={characters} onClose = {onClose} />} />\n            <Route path='/about' element = {<About/>} />\n            <Route path='/detail/:id' element = {<Detail/>} />\n            \n          \n         </Routes>\n      </div>\n   );\n}\n\nexport default App;\n\n\n// EJERCICIO 2 | Routing\n// Ahora le diremos a nuestro ./src/components/form/Form.jsx en App.js dónde debe renderizarse. Para esto:\n\n// Crea una ruta en el archivo App.js y crea una ruta para que el formulario se renderice en /.\n// Si obervas la imagen del ejercicio anterior, la barra de navegación aún se muestra en el login. Deberás crear un renderizado condicional, de modo tal que la Nav se muestre siempre y cuando no estemos en la ruta /.\n// PISTA: investiga sobre el hook useLocation de react-router-dom, y piensa cómo hacer el renderizado condicional."],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,KAAK,MAAM,8BAA8B;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,IAAI,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAK,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE/C,SAASc,QAAQA,CAACC,EAAE,EAAE;IAChBd,KAAK,CAAE,6CAA4Cc,EAAG,EAAC,CAAC,CACpDC,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACZ,IAAIC,IAAI,CAACC,IAAI,EAAE;QACZN,aAAa,CAAEO,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;MACnD,CAAC,MAAM;QACJG,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;MAClD;IACF,CAAC,CAAC,CACLC,KAAK,CAAC,MAAM;MACVF,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;IACjD,CAAC,CAAC;EACT;EAEA,MAAME,OAAO,GAAIT,EAAE,IAAK;IACrBF,aAAa,CAACD,UAAU,CAACa,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKY,QAAQ,CAACZ,EAAE,CAAE,CAAC,CAAC;EACvE,CAAC;EAED,MAAMa,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAG9B,oBACGK,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,GAEdF,QAAQ,CAACG,QAAQ,KAAK,GAAG,gBACzBtB,OAAA,CAACX,GAAG;MAACgB,QAAQ,EAAEA;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GACxB,IAAI,eAET1B,OAAA,CAACX,GAAG;MAACgB,QAAQ,EAAIA;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5B1B,OAAA,CAACN,MAAM;MAAA2B,QAAA,gBACJrB,OAAA,CAACP,KAAK;QAACkC,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAE7B,OAAA,CAACF,IAAI;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1C1B,OAAA,CAACP,KAAK;QAACmC,IAAI,EAAC,OAAO;QAACC,OAAO,eAAE7B,OAAA,CAACV,KAAK;UAACa,UAAU,EAAEA,UAAW;UAACY,OAAO,EAAIA;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtF1B,OAAA,CAACP,KAAK;QAACmC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAI7B,OAAA,CAACJ,KAAK;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5C1B,OAAA,CAACP,KAAK;QAACmC,IAAI,EAAC,aAAa;QAACC,OAAO,eAAI7B,OAAA,CAACH,MAAM;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEZ;AAACxB,EAAA,CA1CQD,GAAG;EAAA,QAqBQN,WAAW;AAAA;AAAAmC,EAAA,GArBtB7B,GAAG;AA4CZ,eAAeA,GAAG;;AAGlB;AACA;;AAEA;AACA;AACA;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}