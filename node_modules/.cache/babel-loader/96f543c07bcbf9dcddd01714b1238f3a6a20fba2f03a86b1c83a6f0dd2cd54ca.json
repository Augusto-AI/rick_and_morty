{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport About from './components/about/About';\nimport Cards from './components/cards/Cards.jsx';\nimport Detail from './components/detail/Detail';\nimport Form from './components/form/Form';\nimport Nav from './components/nav/Nav.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const PASSWORD = '123456';\n  const navigate = useNavigate();\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access, navigate]);\n  function onSearch(id) {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    }).catch(() => {\n      window.alert('Hubo un error al obtener el personaje.');\n    });\n  }\n  const onClose = id => {\n    setCharacters(characters.filter(char => char.id !== parseInt(id)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== '/' && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: () => setAccess(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2Q8DEGYyXsTFU6si4QSFDYV+vcg=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\n\n// EJERCICIO 2 | Routing\n// Ahora le diremos a nuestro ./src/components/form/Form.jsx en App.js dónde debe renderizarse. Para esto:\n\n// Crea una ruta en el archivo App.js y crea una ruta para que el formulario se renderice en /.\n// Si obervas la imagen del ejercicio anterior, la barra de navegación aún se muestra en el login. Deberás crear un renderizado condicional, de modo tal que la Nav se muestre siempre y cuando no estemos en la ruta /.\n// PISTA: investiga sobre el hook useLocation de react-router-dom, y piensa cómo hacer el renderizado condicional.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","Route","Routes","useLocation","useNavigate","About","Cards","Detail","Form","Nav","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","access","setAccess","PASSWORD","navigate","onSearch","id","then","_ref","data","name","oldChars","window","alert","catch","onClose","filter","char","parseInt","className","children","location","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onSubmit","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/rick_and_morty/src/App.js"],"sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport About from './components/about/About';\nimport Cards from './components/cards/Cards.jsx';\nimport Detail from './components/detail/Detail';\nimport Form from './components/form/Form';\nimport Nav from './components/nav/Nav.jsx';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const PASSWORD = '123456';\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access, navigate]);\n\n  function onSearch(id) {\n    axios(`https://rickandmortyapi.com/api/character/${id}`)\n      .then(({ data }) => {\n        if (data.name) {\n          setCharacters((oldChars) => [...oldChars, data]);\n        } else {\n          window.alert('¡No hay personajes con este ID!');\n        }\n      })\n      .catch(() => {\n        window.alert('Hubo un error al obtener el personaje.');\n      });\n  }\n\n  const onClose = (id) => {\n    setCharacters(characters.filter((char) => char.id !== parseInt(id)));\n  };\n\n  return (\n    <div className='App'>\n      {location.pathname !== '/' && <Nav onSearch={onSearch} />}\n      <Routes>\n        <Route path='/login' element={<Form onSubmit={() => setAccess(true)} />} />\n        <Route path='/home' element={<Cards characters={characters} onClose={onClose} />} />\n        <Route path='/about' element={<About />} />\n        <Route\n          path='/detail/:id'\n          element={\n            <Detail characters={characters} onClose={onClose} />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// EJERCICIO 2 | Routing\n// Ahora le diremos a nuestro ./src/components/form/Form.jsx en App.js dónde debe renderizarse. Para esto:\n\n// Crea una ruta en el archivo App.js y crea una ruta para que el formulario se renderice en /.\n// Si obervas la imagen del ejercicio anterior, la barra de navegación aún se muestra en el login. Deberás crear un renderizado condicional, de modo tal que la Nav se muestre siempre y cuando no estemos en la ruta /.\n// PISTA: investiga sobre el hook useLocation de react-router-dom, y piensa cómo hacer el renderizado condicional."],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}